'''
입력된 정수의 부호를 바꿔 출력해보자.

예시 
... 
print(-n) 

참고 
단항(unary) 연산자인 -(negative)를 변수 앞에 붙이면 부호가 반대인 값이 된다. 
'''
# v = int(input())
# print(-v)

'''
문자 1개를 입력받아 그 다음 문자를 출력해보자.
영문자 'A'의 다음 문자는 'B'이고, 숫자 '0'의 다음 문자는 '1'이다.

예시
...
print(chr(n+1))

참고
숫자는 수를 표현하는 문자로서 '0' 은 문자 그 자체를 의미하고, 0은 값을 의미한다.

힌트
아스키문자표에서 'A'는 10진수 65로 저장되고 'B'는 10진수 66으로 저장된다.
따라서, 문자도 값으로 덧셈을 할 수 있다. 
어떤 문자의 값에 1을 더하면 그 다음 문자의 값이 된다.
'''
# v = chr(ord(input())+1)
# print(v)

'''
정수 2개(a, b)를 입력받아 a에서 b를 뺀 차를 출력하는 프로그램을 작성해보자.

예시
...
c = int(a) - int(b)
print(c)

참고
수 - 수는 차(subtraction)가 계산된다.
'''
# a, b = input().split()
# print(int(a)-int(b))

'''
실수 2개(f1, f2)를 입력받아 곱을 출력하는 프로그램을 작성해보자.

예시
...
m = float(f1) * float(f2)
print(m)

참고
수 * 수는 곱(multiplication)이 계산된다.
'''
# f1, f2 = input().split()
# print(float(f1)*float(f2))
'''
단어와 반복 횟수를 입력받아 여러 번 출력해보자.

예시
w, n = input().split()
print(w*int(n))

참고
문자열 * 정수 또는 정수 * 문자열은 그 문자열을 여러 번 반복한 문자열을 만들어 준다.
'''
# w, n = input().split()
# print(w*int(n))

'''
반복 횟수와 문장을 입력받아 여러 번 출력해보자.

예시
n = input()
s = input()
print(int(n)*s)

참고
문자열 * 정수 또는 정수 * 문자열은 그 문자열을 여러 번 반복한 문자열을 만들어 준다.
'''
# n = input()
# s = input()
# print(int(n)*s)

'''
정수 2개(a, b)를 입력받아
a를 b번 곱한 거듭제곱을 출력하는 프로그램을 작성해보자.

예시
...
c = int(a)**int(b) 
print(c)

참고
python 언어에서는 거듭제곱을 계산하는 연산자(**)를 제공한다.
일반적으로 수학 식에서 거듭제곱을 표현하는 사용하는 
서컴플렉스/케릿 기호(^)는 프로그래밍언어에서 다른 의미로 쓰인다.
'''
# a, b = input().split()
# c = int(a)**int(b)
# print(c)

'''
실수 2개(f1, f2)를 입력받아
f1을 f2번 거듭제곱한 값을 출력하는 프로그램을 작성해보자.

참고
python 언어에서는 거듭제곱(exponentiation)을 계산하는 연산자(**)를 제공한다.
일반적으로 수학 식에서 거듭제곱을 표현하는 사용하는 서컴플렉스/케릿 기호(^)는
프로그래밍언어에서 다른 의미로 쓰인다.
'''
# f1, f2 = input().split()
# c = float(f1)**float(f2)
# print(c)

'''
정수 2개(a, b) 를 입력받아 a를 b로 나눈 몫을 출력해보자.

예시
...
print(a//b)

참고
python언어에서는 나눈 몫을 계산하는 연산자(//, floor division)를 제공한다.
a//b 와 같이 작성하면, a를 b로 나눈 몫(quotient)을 계산해준다.
프로그래밍언어에 따라 이렇게 몫을 계산해주는 연산자가 없는 경우도 있다.

실수로 나눈 몫이 어떻게 계산될지도 생각해보자.
'''
# a, b = input().split()
# c = int(a)//int(b)
# print(c)

'''
정수 2개(a, b) 를 입력받아 a를 b로 나눈 나머지를 출력해보자.

예시
...
print(a%b)

참고
python 언어에서는 나눈 나머지를 계산하는 연산자(%, remainder)를 제공한다.
a%b 와 같이 작성하면, a를 b로 나눈 나머지(remainder)를 계산해준다.
나머지 연산(modulus, mod 연산)은 수학자 가우스가 생각해 낸 연산으로,
어떤 수를 다른 수로 나누고 난 후 남는 나머지를 계산하는 연산이다.

실수로 나눈 나머지가 어떻게 계산될지도 생각해보자.
'''
a, b = input().split()
print(int(a)%int(b))